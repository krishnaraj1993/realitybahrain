<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class UserPlan extends \App\Entity\UserPlan implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'id', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'title', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'description', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'bhd', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'sixMonthPackage', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'annualPackage', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'promoAnnual', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'listing', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'crm', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'agents', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'Fetured', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'premium', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'status'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'id', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'title', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'description', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'bhd', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'sixMonthPackage', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'annualPackage', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'promoAnnual', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'listing', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'crm', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'agents', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'Fetured', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'premium', '' . "\0" . 'App\\Entity\\UserPlan' . "\0" . 'status'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (UserPlan $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getBhd(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBhd', []);

        return parent::getBhd();
    }

    /**
     * {@inheritDoc}
     */
    public function setBhd(string $bhd): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBhd', [$bhd]);

        return parent::setBhd($bhd);
    }

    /**
     * {@inheritDoc}
     */
    public function getSixMonthPackage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSixMonthPackage', []);

        return parent::getSixMonthPackage();
    }

    /**
     * {@inheritDoc}
     */
    public function setSixMonthPackage(string $sixMonthPackage): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSixMonthPackage', [$sixMonthPackage]);

        return parent::setSixMonthPackage($sixMonthPackage);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnualPackage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnualPackage', []);

        return parent::getAnnualPackage();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnnualPackage(string $annualPackage): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnnualPackage', [$annualPackage]);

        return parent::setAnnualPackage($annualPackage);
    }

    /**
     * {@inheritDoc}
     */
    public function getPromoAnnual(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromoAnnual', []);

        return parent::getPromoAnnual();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromoAnnual(string $promoAnnual): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromoAnnual', [$promoAnnual]);

        return parent::setPromoAnnual($promoAnnual);
    }

    /**
     * {@inheritDoc}
     */
    public function getListing(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getListing', []);

        return parent::getListing();
    }

    /**
     * {@inheritDoc}
     */
    public function setListing(int $listing): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setListing', [$listing]);

        return parent::setListing($listing);
    }

    /**
     * {@inheritDoc}
     */
    public function getCrm(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCrm', []);

        return parent::getCrm();
    }

    /**
     * {@inheritDoc}
     */
    public function setCrm(bool $crm): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCrm', [$crm]);

        return parent::setCrm($crm);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgents(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgents', []);

        return parent::getAgents();
    }

    /**
     * {@inheritDoc}
     */
    public function setAgents(int $agents): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgents', [$agents]);

        return parent::setAgents($agents);
    }

    /**
     * {@inheritDoc}
     */
    public function getFetured(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFetured', []);

        return parent::getFetured();
    }

    /**
     * {@inheritDoc}
     */
    public function setFetured(int $Fetured): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFetured', [$Fetured]);

        return parent::setFetured($Fetured);
    }

    /**
     * {@inheritDoc}
     */
    public function getPremium(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPremium', []);

        return parent::getPremium();
    }

    /**
     * {@inheritDoc}
     */
    public function setPremium(int $premium): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPremium', [$premium]);

        return parent::setPremium($premium);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(int $status): \App\Entity\UserPlan
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

}
